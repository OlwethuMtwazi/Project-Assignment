
-- USERS TABLE
CREATE TABLE users (
  user_id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  firstname VARCHAR(100) NOT NULL,
  lastname VARCHAR(100) NOT NULL,
  phonenumber VARCHAR(15) NOT NULL,
  role ENUM('Student','Staff','Counsellor','Admin') NOT NULL DEFAULT 'Student',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- COUNSELLORS TABLE
CREATE TABLE counsellors (
    counsellor_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    specialization VARCHAR(100),
    bio TEXT,
    availability TEXT
);

-- SESSIONS TABLE (appointments)
CREATE TABLE sessions (
    session_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    counsellor_id INT NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    status ENUM('Confirmed','Cancelled','Rescheduled') DEFAULT 'Confirmed',
    session_type ENUM('Therapy','Counselling') NOT NULL DEFAULT 'Counselling',
    meeting_type ENUM('Face2Face','Virtual') NOT NULL DEFAULT 'Virtual',
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (counsellor_id) REFERENCES counsellors(counsellor_id)
);

-- SESSION NOTES TABLE
CREATE TABLE session_notes (
    note_id INT AUTO_INCREMENT PRIMARY KEY,
    session_id INT NOT NULL,
    notes TEXT,
    FOREIGN KEY (session_id) REFERENCES sessions(session_id)
);

-- FEEDBACK TABLE
CREATE TABLE feedback (
    feedback_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    session_id INT NOT NULL,
    rating INT CHECK (rating >= 1 AND rating <= 5),
    comments TEXT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (session_id) REFERENCES sessions(session_id)
);
